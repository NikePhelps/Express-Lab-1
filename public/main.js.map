{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div {\\r\\n    border: 2px solid purple;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7XHJcbn0iXX0= */\"","module.exports = \"<h1>List of Items</h1>\\n\\n<form #itemForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNewItem(itemForm)\\\">\\n    <label for=\\\"\\\">ID</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"id\\\">\\n    <label for=\\\"\\\">Product</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"product\\\">\\n    <label for=\\\"\\\">Price</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"price\\\">\\n    <label for=\\\"\\\">Quantity</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"quantity\\\">\\n    <button>Add Item</button>\\n</form>\\n\\n<div *ngFor=\\\"let item of cartItems; index as i\\\">\\n  <p>ID: {{ item.id }}</p>\\n  <p>Product: {{ item.product }}</p>\\n  <p>Price: {{ item.price }}</p>\\n  <p>Quantity: {{ item.quantity }}</p>\\n  <button (click)=\\\"toggleForm(i)\\\">Edit</button>\\n  <button (click)=\\\"deleteAnItem(item.id)\\\">X</button>\\n\\n\\n<form *ngIf=\\\"item.beingUpdated\\\" #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"[updateAnItem(item), toggleForm(i)]\\\">\\n  <label for=\\\"\\\">ID</label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"item.id\\\" name=\\\"id\\\">\\n  <label for=\\\"\\\">Product</label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"item.product\\\" name=\\\"product\\\">\\n  <label for=\\\"\\\">Price</label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"item.price\\\" name=\\\"price\\\">\\n  <label for=\\\"\\\">Quantity</label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"item.quantity\\\" name=\\\"quantity\\\">\\n  </form>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { CartServiceService } from \"./cart-service.service\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'expresslab';\n  cartItems: any \n  shouldBeHidden: boolean = true;\n    \n  \n  constructor(private cartService: CartServiceService) {\n    this.cartService.getAllItems().subscribe(response => {\n      this.cartItems = response;\n    });\n\n  }\n  toggleForm(index) {\n    this.cartItems[index].beingUpdated = !this.cartItems[index].beingUpdated;\n    console.log(this.cartItems[index]);\n    this.shouldBeHidden = !this.shouldBeHidden;\n  }\n\n  addNewItem(form) {\n    this.cartService\n      .addItems({\n        ...form.value})\n      .subscribe(response => {\n        this.cartItems = response;\n      });\n  }\n\n  deleteAnItem(id) {\n    this.cartService.deleteItem(id).subscribe(response => {\n      this.cartItems = response;\n    });\n  }\n\n  updateAnItem(item) {\n    this.cartService.updateItem(item).subscribe(response => {\n      this.cartItems = response;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CartServiceService } from \"./cart-service.service\";\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [CartServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllItems() {\n    return this.http.get(\"/api/cartitems\", { responseType: \"json\"});\n  }\n\n  addItems(newItem) {\n    return this.http.post(\"/api/cartitems\", newItem, { responseType: \"json\"});\n  }\n\n  deleteItem(id) {\n    return this.http.delete(`/api/cartitems/${id}`, { responseType: \"json\"});\n  }\n\n  updateItem(item) {\n    return this.http.put(`/api/animals/${item.id}`, item, { responseType: \"json\"});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}