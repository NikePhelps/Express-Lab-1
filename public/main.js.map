{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div {\\r\\n    border: 2px solid purple;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7XHJcbn0iXX0= */\"","module.exports = \"<h1>List of Items</h1>\\n\\n<form #itemForm=\\\"ngForm\\\" (ngSubmit)=\\\"addItems(itemForm.value.newID, itemForm.value.newProduct, \\nitemForm.value.newPrice, itemForm.value.newQuantity)\\\">\\n    <label for=\\\"\\\">ID</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"newID\\\">\\n    <label for=\\\"\\\">Product</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"newProduct\\\">\\n    <label for=\\\"\\\">Price</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"newPrice\\\">\\n    <label for=\\\"\\\">Quantity</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"newQuantity\\\">\\n    <button>Add Item</button>\\n</form>\\n\\n<div *ngFor=\\\"let item of cartItems\\\">\\n  <p>ID: {{ item.id }}</p>\\n  <p>Product: {{ item.product }}</p>\\n  <p>Price: {{ item.price }}</p>\\n  <p>Quantity: {{ item.quantity }}</p>\\n  <button (click)=\\\"deleteItem(item.id)\\\">X</button>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\nimport { CartServiceService } from \"./cart-service.service\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'expresslab';\n  cartItems: any = [\n    {\n    id: 0,\n    product: \"shirt\",\n    price: 80,\n    quantity: 2\n    },\n    {\n        id: 1,\n        product: \"jeans\",\n        price: 100,\n        quantity: 1\n        },\n];\n  constructor(private cartService: CartServiceService) {\n    this.cartService.getAllItems().subscribe(response => {\n      this.cartItems = response;\n    });\n\n  }\n\n  addNewAnimal(newID, newProduct, newPrice, newQuantity) {\n    this.cartService.addItems(newID, newProduct, newPrice, newQuantity).subscribe(response => {\n      this.cartItems = response;\n    });\n  }\n\n  deleteItem(id) {\n    this.cartService.deleteItem(id).subscribe(response => {\n      this.cartItems = response;\n    });\n  }\n\n  // updateAnAnimal(newname, oldname) {\n  //   this.cartService.updateAnimal(newname, oldname).subscribe(response => {\n  //     this.cartItems = response;\n  //   });\n  // }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CartServiceService } from \"./cart-service.service\";\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [CartServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllItems() {\n    return this.http.get(\"/api/cartitems\", { responseType: \"json\"});\n  }\n\n  addItems(newID, newProduct, newPrice, newQuantity) {\n    return this.http.post(\"/api/cartitems\", { id: newID, product: newProduct, \n      price: newPrice, quantity: newQuantity }, { responseType: \"json\"});\n  }\n\n  deleteItem(id) {\n    return this.http.delete(`/api/animals/${id}`, { responseType: \"json\"});\n  }\n\n  // updateAnimal(newname, oldname) {\n  //   return this.http.put(`/api/animals/${oldname}`, { name: newname }, { responseType: \"json\"});\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}